{"version":3,"sources":["utils.js","components/App/App.js","index.js"],"names":["TODO_APP","Root","styled","div","TodoWrapper","TodoContentWrapper","props","isDone","TodoButtonWrapper","Button","button","DeleteButton","OutlineButton","OutlineDeleteButton","TodoItem","todo","onDelete","onIsDone","data-todo-id","id","content","onClick","Header","TodoList","TodoForm","TodoFormInput","input","TodoFormHr","hr","FilterItem","$active","FilterWrapper","FilterContext","createContext","Filter","filter_name","useContext","filter","setFilter","App","useRef","useState","value","setValue","lastTodoApp","JSON","parse","data","window","localStorage","getItem","getTodoApp","length","current","todoList","setTodoList","useEffect","todoApp","setItem","stringify","handleDeleteTodo","handleTodoIsDone","type","placeholder","onChange","e","target","alert","Provider","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3c5028b.chunk.js","sourcesContent":["const TODO_APP = 'todoApp';\r\nexport const setTodoApp = (todoApp) => {\r\n    window.localStorage.setItem(TODO_APP, JSON.stringify(todoApp));\r\n}\r\nexport const getTodoApp = () => {\r\n    let data = window.localStorage.getItem(TODO_APP);\r\n    if(data === null){\r\n        data = '[]';\r\n    }\r\n    return data\r\n}","import React, {useState, useRef, useEffect, createContext, useContext} from \"react\";\nimport styled from \"styled-components\";\nimport {setTodoApp, getTodoApp} from '../../utils';\n\nconst Root = styled.div`\n  width: 800px;\n  margin: 20px auto;\n  // text-align: center;\n  background: white;\n  min-height: 400px;\n  padding: 20px 0;\n`;\nconst TodoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 10px;\n  border-radius: 5px;\n  transition-duration: 0.2s;\n  transition-property: background;\n  & + & {\n    margin-top: 15px;\n  }\n  &:hover {\n    background: wheat;\n  }\n`;\nconst TodoContentWrapper = styled.div`\n  font-size: 20px;\n  ${props=>props.isDone && `\n    text-decoration: line-through;\n    color: #f44336;\n  `}\n`;\nconst TodoButtonWrapper = styled.div``;\nconst Button = styled.button`\n  background-color: #008CBA; /* Blue */\n  border: none;\n  border-radius: 3px;\n  color: white;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  width: 70px;\n  & + & {\n    margin-left: 10px;\n  }\n  ${props=>props.isDone && `\n  background-color: rgba(0, 0, 0, 0.3);\n  `}\n`;\nconst DeleteButton = styled(Button)`\n  background-color: #f44336;\n`\nconst OutlineButton = styled(Button)`\n  background-color: white;\n  color: black;\n  border: 1px solid #008CBA; \n  width: fit-content;\n  transition-duration: 0.2s;\n  &:hover {\n    background-color: #008CBA;\n    color: white;\n  }\n`;\nconst OutlineDeleteButton = styled(OutlineButton)`\n  color: black;\n  border: 1px solid #f44336; \n  &:hover {\n    background-color: #f44336;\n    color: white;\n  }\n`;\nfunction TodoItem({todo, onDelete, onIsDone}){\n  return (\n    <TodoWrapper data-todo-id={todo.id}>\n      <TodoContentWrapper isDone={todo.isDone}>\n        {todo.content}\n      </TodoContentWrapper>\n      <TodoButtonWrapper>\n        <Button isDone={todo.isDone} onClick={()=>{\n          onIsDone(todo.id);\n        }}>{todo.isDone ? \"未完成\" : \"已完成\"}</Button>\n        <DeleteButton onClick={()=>{\n          onDelete(todo.id);\n        }}>刪除</DeleteButton>\n      </TodoButtonWrapper>\n    </TodoWrapper>\n  )\n}\nconst Header = styled.div`\n  color: #008CBA;\n  margin-bottom: 20px;\n  font-size: 28px;\n  font-weight: bold;\n  margin: 0 auto;\n  width: fit-content;\n`;\nconst TodoList = styled.div`\n  width: 60%;\n  margin: 0 auto;\n  padding-bottom: 20px;\n`;\nconst TodoForm = styled.div`\n  margin: 20px auto;\n  width: fit-content;\n  display: flex;\n  jsutify-content: center;\n`;\nconst TodoFormInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 2px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  margin-right: 20px;\n  width: 250px;\n  font-size: 18px;\n`\nconst TodoFormHr = styled.hr`\n  color: rgba(0, 0, 0, 0.65);\n  width: 60%;\n`\nconst FilterItem = styled.div`\n  // border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n  padding: 5px 10px;\n  cursor: pointer;\n  ${props=> props.$active && `\n    border: 1px solid #f44336;\n  `}\n  &:hover {\n    color: #f44336;\n  }\n`\nconst FilterWrapper = styled.div`\n  margin: 15px auto;\n  width: fit-content;\n  display: flex;\n  ${FilterItem} + ${FilterItem} {\n    margin-left: 20px;\n  }\n`\nconst FilterContext = createContext(null);\n\nfunction Filter({filter_name}){\n  const {filter, setFilter} = useContext(FilterContext)\n  return(\n    <FilterItem \n      $active={filter_name === filter}\n      onClick={()=>{\n        setFilter(filter_name)\n      }}\n    >{filter_name}</FilterItem>\n  )\n} \n\nfunction App() {\n  const id = useRef(1);\n  const [value, setValue] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [todoList, setTodoList] = useState(()=>{\n    let lastTodoApp = JSON.parse(getTodoApp());\n    if(lastTodoApp.length > 0){\n      id.current = lastTodoApp[0].id + 1;\n    }\n    else{\n      lastTodoApp = []\n    }\n    return lastTodoApp\n  });\n  useEffect(()=>{\n    setTodoApp(todoList);\n  }, [todoList])\n  useEffect(()=>{\n  },[filter])\n  const handleTodoChange = (e) => {\n    setValue(e.target.value);\n  }\n  const handleAddTodo = (e) =>{\n    // e.preventDefault();\n    if(value){\n      setTodoList([{\n      id: id.current,\n      content: value,\n      isDone: false\n      },...todoList]);\n      setValue('');\n      id.current++;\n    }\n    else{\n      alert('todo is empty')\n    }\n  }\n  const handleDeleteTodo = (id)=>{\n    setTodoList(todoList.filter(todo=> todo.id !== id))\n  }\n  const handleTodoIsDone = (id)=>{\n    setTodoList(todoList.filter(todo=>{\n      if(todo.id === id){\n        todo.isDone = !todo.isDone;\n      }\n      return todo;\n    }))\n  }\n  const handleDeleteAllTodo = ()=>{\n    setTodoList([]);\n    id.current = 1;\n  }\n  const filterTodoList = ()=>{\n    if(filter === 'completed'){\n      return todoList.filter(todo=>todo.isDone !== true)\n    }\n    else if(filter === 'uncompleted'){\n      return todoList.filter(todo=>todo.isDone === true)\n    }\n    else{\n      return todoList\n    }\n  }\n  return (\n    <Root>\n      <div>\n        <Header>Todo-List</Header>\n        <TodoForm>\n          {/* <div> */}\n            <TodoFormInput \n              type='text'\n              value={value}\n              placeholder='new todo...'\n              onChange={handleTodoChange}\n            />\n            <OutlineButton onClick={handleAddTodo}>\n              Add Todo\n            </OutlineButton>\n            <OutlineDeleteButton onClick={handleDeleteAllTodo}>\n              Delete All\n            </OutlineDeleteButton>\n          {/* /div>< */}\n        </TodoForm>\n        <FilterWrapper>\n          <FilterContext.Provider value={{filter, setFilter}}>\n            <Filter filter_name=\"all\" />\n            <Filter filter_name=\"completed\" />\n            <Filter filter_name=\"uncompleted\" />\n          </FilterContext.Provider>\n        </FilterWrapper>\n        <TodoFormHr />\n        <TodoList>\n          {\n            todoList && filterTodoList().map(todo=><TodoItem \n              key={todo.id}\n              todo={todo}\n              onDelete={handleDeleteTodo}\n              onIsDone={handleTodoIsDone}\n            />)\n          }{\n            !todoList.length && <div>Data Is Not Exist.</div>\n          }\n        </TodoList>\n      </div>\n    </Root>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}